# This is a basic workflow to help you get started with Actions

name: tweet_scheduler

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_dispatch:
  #schedule:
  #  - cron: '30 10,18 * * *'    

jobs:
  hadleyfreebot-post:
    runs-on: ubuntu-latest
    env:
      TWITTER_CONSUMER_API_KEY_HADLEYBOT: ${{ secrets.TWITTER_CONSUMER_API_KEY_HADLEYBOT }}
      TWITTER_CONSUMER_API_SECRET_HADLEYBOT: ${{ secrets.TWITTER_CONSUMER_API_SECRET_HADLEYBOT }}
      TWITTER_ACCESS_TOKEN_HADLEYBOT: ${{ secrets.TWITTER_ACCESS_TOKEN_HADLEYBOT }}
      TWITTER_ACCESS_TOKEN_SECRET_HADLEYBOT: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET_HADLEYBOT }}
      RENV_PATHS_ROOT: ~/.local/share/renv

    steps:
      - uses: actions/checkout@v2 # Checkout branch into the runner
      - uses: r-lib/actions/setup-r@master # Set up R runtime
        with:
          r-version: 'release'
          
      # - name: Setup renv # Set up R env to install packages
      #   run: |
      #     install.packages('remotes')
      #     remotes::install_github("rstudio/renv")
      #   shell: Rscript {0}
        
      - uses: actions/cache@v2 # Cache packages so won't be compiled everytime job is run
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Install dependencies # Install the package dependencies
        shell: Rscript {0}
        run: install.packages("renv")

      - name: run renv load 
        shell: Rscript {0}
        run: renv::load()

      - name: run r libpaths 
        shell: Rscript {0}
        run: .libPaths()

      - name: run renv restore 
        run: R -e 'renv::restore()'
  
      # Run R script
      - name: Create and post tweet
        run: Rscript "Code/hadley_bot_script.R"

  #Commit updated files to repo
      - name: Commit files # Commit changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add Code/Data/*
          git commit -am "GA updates rows tweeted dataset"
          git push origin main
          
          
# git diff-index --quiet HEAD || (git commit -m "GA updates rows tweeted dataset" && git push)
# If you use the above line - then it only commit if there are any changes and avoid the “Nothing to commit” message which the runner treats as an error
